/// üîß Arquivo schema.prisma
/// 
/// Esse √© o arquivo principal de configura√ß√£o do Prisma.
/// Aqui voc√™ define:
/// - O banco de dados que ser√° usado (datasource)
/// - O client que ser√° gerado (generator)
/// - E todos os modelos do banco (model, enum, etc)
/// 
/// Quando voc√™ roda `npx prisma generate`, o Prisma cria automaticamente
/// um client baseado neste schema, pronto pra fazer queries seguras e tipadas.
///
/// Quando voc√™ roda `npx prisma migrate dev`, ele gera e aplica as migrations
/// com base nas mudan√ßas nos modelos declarados aqui.
///
/// üìÅ Normalmente fica na raiz da pasta `prisma/`, ex: `prisma/schema.prisma`

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Jogador {
  @@map("jogador")

  id         String   @id @default(uuid())
  nome       String
  numeroWpp  String   @unique
  email      String?  @unique
  xp         Int      @default(0)
  energia    Int      @default(100)
  hpAtual    Int      @default(100) // Vida atual do jogador
  hpMaximo   Int      @default(100) // Vida m√°xima (pode aumentar com n√≠vel ou itens)
  moedas     Int      @default(0)   // Dinheiro in-game üí∞
  classeId   String?
  classe     Classes? @relation(fields: [classeId], references: [id])
  criadoEm   DateTime @default(now())
}

model Classes {
  @@map("classes")

  id          String        @id // Ex: "guerreiro", "mago"
  nome        String
  descricao   String
  habilidades Habilidades[]
  jogadores   Jogador[]
}

model Habilidades {
  @@map("habilidades")

  id           String   @id // Ex: "golpe_furioso"
  nome         String
  descricao    String
  xpRequerido  Int
  custoEnergia Int
  classeId     String
  classe       Classes  @relation(fields: [classeId], references: [id])
}

model Item {
  @@map("item")

  id         String   @id           // 'pote_vida', 'elmo_sagrado', etc
  nome       String
  tipo       String                 // 'elmo', 'consumivel', etc
  descricao  String
  raridade   String

  atributos  Json?                  // Ex: { hp: 25, def: 12, hpRecuperado: 50 }
  efeitos    Json?                  // Ex: { passivo: 'Reduz em 10% o dano m√°gico' }

  criadoEm   DateTime @default(now())
}
